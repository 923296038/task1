<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jnshu.studentMapper.StudentMapper">
    <!--接口-->

    <!-- select语句 -->
    <select id="selectUserByID" parameterType="int" resultType="Student">
        select * from student where id = #{id}
    </select>

    <!-- 定义的resultMap，可以解决类的属性名和数据库列名不一致的问题-->
    <!-- <resultMap type="Student" id="userResultMap">
        <id property="id" column="user_id"  />
        <result property="userName" column="user_userName"  />
        <result property="userAge" column="user_userAge"  />
        <result property="userAddress" column="user_userAddress"  />
    </resultMap> -->

    <!-- 返回list的select语句，注意 resultMap的值是指向前面定义好的 -->
    <!-- <select id="selectUsersByName" parameterType="string" resultMap="userResultMap">
        select * from student where student.userName = #{userName}
    </select> -->

    <select id="selectUsersByName" parameterType="string" resultType="Student">
        select * from student where name = #{name}
    </select>
    <select id="selectUsersById" parameterType="int" resultType="Student">
        select * from student where id = #{id}
    </select>

    <!--执行增加操作的SQL语句。id和parameterType分别与IUserOperation接口中的addUser方法的名字和参数类型一致。
    useGeneratedKeys设置为"true"表明要MyBatis获取由数据库自动生成的主键；keyProperty="id"指定把获取到的主键值注入到User的id属性-->
    <insert id="addUser" parameterType="Student"
            useGeneratedKeys="true" keyProperty="id">
        insert into student (name,major,admission_time,graduate_school,
        online_id,diary_link,wish,guide,create_time,update_time)
                values(#{name},#{major},#{admission_time},
        #{graduate_school},#{online_id},#{diary_link},#{wish},
        #{guide},#{create_time},#{update_time})
    </insert>

    <update id="updateUser" parameterType="Student" >
        update student set wish=#{wish} where name=#{name}
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from student where id=#{id}
    </delete>

</mapper>